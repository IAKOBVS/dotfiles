#!/bin/sh
file=$1
cd "$(dirname "$file")" || exit 1
flags='-Wall -Wextra -Warray-bounds -Wshadow -Wuninitialized -Wunused-variable -Wnull-dereference -Wformat'
analyzer='-fanalyzer -fsanitize=address -g'
shift
for opt in "$@"; do
	case $opt in
	0 | 1 | 2 | 3) OLevel="-O$opt -flto" ;;
	s | S) flags="$flags $analyzer -g" ;;
	d | D | g | G) flags='-fsanitize=address -g' ;;
	*) flags="$flags $opt" ;;
	esac
done
case $file in
*.c | *.cpp | *.cc) ;;
*)
	case $(find . -type f -name '*.c' -o -name '*.cpp' -o -name '*.cc') in
	*$file.cpp*) file=$file.cpp ;;
	*$file.cc*) file=$file.cc ;;
	*$file.c*) file=$file.c ;;
	*)
		echo 'Not a .c or .cpp file!'
		exit 1
		;;
	esac
	;;
esac
# get impl.c from #include "header.h" /* impl.c */
get_incl()
{
	sed -n "s/^[ \t ]*#[ \t]*include[ \t]\{1,\}\"\([^ \t]*\)\{1,\}\"[ \t]\{1,\}.*\([-\/_.0-9A-Za-z]\{1,\}$1\).*/\1/p" "$2"
}
o=$(get_incl .o "$file")
c=$(get_incl .c "$file")
cpp=$(get_incl .cpp "$file")
precomp=$(get_incl .gch "$file")
flags="$OLevel $file -o $(basename "$file" ".${file#*.}") $flags $c $precomp $o"
case $file in
*.c) compiler=gcc ;;
*.cpp | *.cc)
	compiler=g++
	flags="$flags $cpp -std=gnu++17"
	;;
esac
echo "$compiler $flags"
echo
$compiler $flags || exit 1
./${file%.*}
