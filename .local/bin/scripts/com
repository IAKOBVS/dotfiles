#!/bin/sh
file=$1
cd "$(dirname "$file")" || exit 1
flags='-Wpedantic -pedantic -Wall -Wextra -Wuninitialized -Wshadow -Warray-bounds -Wnull-dereference -Wformat -Wunused -Wwrite-strings'
sanitizer='-fsanitize=address'
analyzer="-fanalyzer $sanitizer -g"
shift
vg=
vg_flag=
CC=cc
CPP='c++'
for opt in "$@"; do
	case $opt in
	*.h) exit 1 ;;
	0 | 1 | 2 | 3)
		OLevel="-O$opt"
		flags="$flags -flto -march=native"
		;;
	s | S) flags="$flags $sanitizer -g" ;;
	f | F) flags="$flags $analyzer -g" ;;
	d | D | g | G) flags="$flags -g" ;;
	v)
		flags="$flags -g"
		vg=valgrind
		vg_flag='--leak-check=full --show-leak-kinds=all --track-origins=yes --verbose'
		;;
	t) CC=tcc ;;
	tmp) use_tmp=1 ;;
	*) flags="$flags $opt" ;;
	esac
done
case $file in
*.c | *.cpp | *.cc) ;;
*)
	case $(find . -type f -name '*.c' -o -name '*.cpp' -o -name '*.cc') in
	*$file.cpp*) file=$file.cpp ;;
	*$file.cc*) file=$file.cc ;;
	*$file.c*) file=$file.c ;;
	*)
		echo 'Not a .c or .cpp file!'
		exit 1
		;;
	esac
	;;
esac
if test "$use_tmp"; then
	out_file=/tmp/$(basename "$file" ".${file#*.}")
else
	out_file=$(basename "$file" ".${file#*.}")
fi
flags="$OLevel $file -o $out_file $flags"
case $file in
*.c) compiler=$CC ;;
*.cpp | *.cc)
	compiler=$CPP
	;;
esac
echo "$compiler $flags"
echo
#shellcheck disable=SC2086
$compiler $flags || exit 1
#shellcheck disable=SC2086
$vg ${out_file%.*} $vg_flag
test "$use_tmp" && rm "$out_file"
