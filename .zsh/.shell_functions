#!/bin/bash

__NPROC__=$(nproc 2>/dev/null || sysctl -n hw.logicalcpu 2>/dev/null || getconf _NPROCESSORS_ONLN 2>/dev/null)
export __NPROC__

export __GLOBAL_FZFVIM__=__GLOBAL_FZFVIM__

# shellcheck disable=SC2009
(case $(ps -Ao command | grep -v grep) in
*__cleanup_fzfvim__*) ;;
*) __cleanup_fzfvim__ & ;;
esac &)

export __VIM_PROG__=/tmp/$__GLOBAL_FZFVIM__/__VIM_PROG__$$
export __VIM_ARG__=/tmp/$__GLOBAL_FZFVIM__/__VIM_ARG__$$
export __LF_DIR__=/tmp/$__GLOBAL_FZFVIM__/__LF_DIR__$$
export __VIM_LAST_FILE__=/tmp/$__GLOBAL_FZFVIM__/__VIM_LAST_FILE__$$
export __LAST_CMD__=/tmp/$__GLOBAL_FZFVIM__/__LAST_CMD__$$

export __VIMCD__=1
export __LFCD__=2
export __FZF__=3
export __FZFLIVE__=4
export __FZFLIVEHOME__=5
export __FZFHOMELIVE__=5
export __GREPVIM__=6

(/bin/mkdir -p /tmp/$__GLOBAL_FZFVIM__ &)
(echo >$__VIM_PROG__ &)
(echo >$__VIM_ARG__ &)
(echo >$__LF_DIR__ &)
(echo >$__VIM_LAST_FILE__ &)
(echo >$__LAST_CMD__ &)

touch()
{
	__file__=$(realpath "${@##* }" 2>/dev/null)
	/bin/touch "$@"
}

mkdir()
{
	__file__=$(realpath "${@##* }" 2>/dev/null)
	/bin/mkdir "$@"
}

__vim_sel__()
{
	[ ! -f $__VIM_PROG__ ] 2>/dev/null && return
	__prog__=$(<$__VIM_PROG__)
	if [ ! -f $__VIM_ARG__ ] 2>/dev/null; then
		__arg__=''
	else
		__arg__=$(<$__VIM_ARG__)
	fi
	(/bin/rm -f $__VIM_ARG__ $__VIM_PROG__ &) >/dev/null 2>/dev/null
	clear
	case $__prog__ in
	"$__VIMCD__") vimcd "$__arg__" ;;
	"$__LFCD__") lfcd "$__arg__" ;;
	"$__FZF__") fzflive "$__arg__" ;;
	"$__FZFLIVE__") fzflive "$__arg__" ;;
	"$__FZFLIVEHOME__") fzflive "$__arg__" ;;
	"$__GREPVIM__") grepvim "$__arg__" ;;
	esac
}

__last_cmd__()
{
	[ -f $__LAST_CMD__ ] || return
	case $(<$__LAST_CMD__) in
	"$__VIMCD__") vimcd "$(<$__VIM_LAST_FILE__)" ;;
	"$__LFCD__") lfcd "$(<$__VIM_LAST_FILE__)" ;;
	esac
}

lfcd()
{
	echo >$__LAST_CMD__
	lf -last-dir-path="$__LF_DIR__" "$@" 2>/dev/null &&
		__vim_sel__
	__dir__=$(<$__LF_DIR__)
	(/bin/rm -f $__LF_DIR__ >/dev/null 2>/dev/null &)
	clear
	[ -d "$__dir__" ] && [ "$__dir__" != "$(pwd)" ] && cd "$__dir__" || return
}

vimcd()
{
	case $1 in
	'')
		__cmd__=$EDITOR
		__file__=
		;;
	'-c')
		__file__=$(realpath "$3")
		[ -f "$__file__" ] || return
		cd "${__file__%/?*}" || return
		__cmd__=$EDITOR
		set -- -c "$2"
		;;
	*)
		__file__=$(realpath "$1")
		case $__file__ in
		*.mkv | *.mov | *.mp4 | \
			*.png | *.jpg | *.jpeg)
			(echo $__LFCD__ >$__LAST_CMD__ &)
			lfcd "$__file__"
			;;
		*)
			if [ -f "$__file__" ]; then
				cd "${__file__%/?*}" || return
				__cmd__=$EDITOR
			elif [ -d "$__file__" ]; then
				cd "$__file__" || return
				__cmd__=lfcd
			else
				echo "$1 is not a __file__"
				echo 'touch __file__? (y/n)'
				read -r ok
				case $ok in
				y | Y) touch "$1" ;;
				*) return ;;
				esac
				__cmd__=$EDITOR
			fi
			shift
			;;
		esac
		;;
	esac
	(echo $__VIMCD__ >$__LAST_CMD__ &)
	$__cmd__ "$__file__" "$@" &&
		__vim_sel__
}

fzfbase()
{
	if [ ! "$1" ]; then
		__last_cmd__
	elif [ -f "$1" ]; then
		vimcd "$1"
	else
		lfcd "$1"
	fi
}

fzflive()
{
	# shellcheck disable=SC2164
	cd "$1" 2>/dev/null
	fzfbase "$(find . -type f ! -path '*.git*' ! -path '*.o' ! -path '*node_modules*' | fzf --preview "bat --style=numbers --color=always {1}")"
}

__RG_ARGS__="-j $__NPROC__ --color=always --no-heading -n --max-filesize 1M"

grepvim()
{
	# shellcheck disable=SC2164
	cd "$1" 2>/dev/null
	__grepped__=$(fzf -d: -n 2.. --bind "start:reload:rg $__RG_ARGS__ '' " \
		--bind "change:reload:rg $__RG_ARGS__ {q} || true" \
		--ansi --disabled \
		--preview-window 'down:20%:+{2}' \
		--preview 'bat --style=numbers --color=always --highlight-line {2} {1}')
	if [ "$grepped" ]; then
		vimcd -c ":$(echo "$grepped" | cut -d: -f2)" "${grepped%%:*}"
	else
		__last_cmd__
	fi
}
