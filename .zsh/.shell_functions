#!/bin/sh
lfcd()
{
	clear
	__lf_cd__=$(mktemp -uq)
	trap 'rm -f $__lf_cd__ >/dev/null 2>&1 && trap - HUP INT QUIT TERM PWR EXIT' HUP INT QUIT TERM PWR EXIT
	lf -last-dir-path="$__lf_cd__" "$@" &&
		__select_action__
	if [ -f "$__lf_cd__" ]; then
		__lf_dir__="$(cat "$__lf_cd__")"
		[ -d "$__lf_dir__" ] && [ "$__lf_dir__" != "$(pwd)" ] && cd "$__lf_dir__"
	fi
}

__vim_prog__=$(mktemp -uq)
__vim_arg__=$(mktemp -uq)
export __vim_prog__
export __vim_arg__

fzfvim()
{
	file=$(fzfdef $1)
	test $file || return
	if [ -f "$file" ]; then
		vimcd $file
	else
		lfcd $file
	fi
}

vimcd()
{
	case $1 in
	'')
		__vim_cmd__=$EDITOR
		;;
	*)
		file=$(realpath ${@##* })
		if [ -f $file ]; then
			cd ${file%/?*}
			__vim_cmd__=$EDITOR
		elif [ -d $file ]; then
			cd $file
			__vim_cmd__=lfcd
		else
			cd $(dirname $file)
			touch $file
			__vim_cmd__=$EDITOR
		fi
		;;
	esac
	shift
	$__vim_cmd__ $file $@ &&
		__select_action__
}

__select_action__()
{
	[ ! -f $__vim_prog__ ] 2>/dev/null && return
	__local_vim_prog__=$(cat $__vim_prog__)
	if [ ! -f $__vim_arg__ ] 2>/dev/null; then
		__local_vim_arg__=''
	else
		__local_vim_arg__=$(cat $__vim_arg__)
	fi
	(/bin/rm -f $__vim_prog__ &)
	(/bin/rm -f $__vim_arg__ &)
	case $__local_vim_prog__ in
	*fzf*) fzfvim "$__local_vim_arg__" ;;
	*vim*) vimcd "$__local_vim_arg__" ;;
	*lf*) lfcd "$__local_vim_arg__" ;;
	esac
}

mkdir()
{
	file=$(realpath $1 2>/dev/null)
	[ -d $1 ] || fzf_update_dir $1
	/bin/mkdir $1
}

touch()
{
	file=$(realpath $1 2>/dev/null)
	[ -f $1 ] || fzf_update_dir $1
	/bin/touch $1
}
